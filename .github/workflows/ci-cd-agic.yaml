name: Microservices Lab - AGIC

on:
  push:
    branches:
      - agic
    paths-ignore:
      - 'frontend/**'
  workflow_dispatch:

env:
  # basic
  resourceGroup: aks-agic-lab
  clusterName: aks-agic-cluster
  location: southeastasia

jobs:
  build:
    name: Build / Push to ACR
    runs-on: ubuntu-latest
    steps:
      # checkout branch
      - name: git checkout main branch
        uses: actions/checkout@v3

      # log into Azure
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'docker login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'docker compose build'
        run: CONTAINER_REGISTRY=${{secrets.CONTAINER_REGISTRY}} GIT_SHA=${{github.sha}} docker compose build

      - name: 'docker compose push'
        run: CONTAINER_REGISTRY=${{secrets.CONTAINER_REGISTRY}} GIT_SHA=${{github.sha}} docker compose push

  deploy:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: build
    steps:
      # checkout branch
      - name: git checkout main branch
        uses: actions/checkout@v2

      - name: 'Install Helm'
        uses: azure/setup-helm@v3
        with:
          version: v3.3.1

      # log into Azure
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Set AKS Context'
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.resourceGroup }}
          cluster-name: ${{env.clusterName}}

      - name: 'Helm Deploy Hello Service'
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace prod \
            hello-service \
            ./services/hello-world/kubernetes \
            --set image.tag=${{github.sha}} \
            --set image.registry=${{secrets.CONTAINER_REGISTRY}} \
            --set cosmos_uri=${{secrets.COSMOS_URI}} \

      - name: 'Helm Deploy Quote Service'
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace prod \
            quote-service \
            ./services/quote/kubernetes \
            --set image.tag=${{github.sha}} \
            --set image.registry=${{secrets.CONTAINER_REGISTRY}} \
            --set cosmos_uri=${{secrets.COSMOS_URI}} \
